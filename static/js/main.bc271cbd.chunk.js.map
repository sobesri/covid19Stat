{"version":3,"sources":["services/api.service.ts","types.tsx","Components/Global/index.tsx","Components/SummaryChart/caseSummaryChart.tsx","Components/SummaryChart/globalSummaryChart.tsx","Components/DevDetail/index.tsx","content/index.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["instanceSl","axios","create","baseURL","instanceGlobal","defaults","headers","common","FilterType","apiService","get","getStatistics_HPB","then","res","data","getStatistics_Global","instance","controller","action","urlParams","queryParams","apiRequest","method","url","createUrl","options","createRequestOptions","request","catch","error","console","log","forEach","param","params","queryString","responseType","Confirmed","Deaths","Recovered","NewConfirmed","NewDeaths","NewRecovered","LOCAL_TIMELINE","date","Date","recovered","deaths","confirmed","chartOptions","maintainAspectRatio","aspectRatio","rotation","Math","PI","legend","labels","fontColor","position","layout","padding","left","right","top","bottom","Global","props","useState","filteredContents","setContents","selectedSummary","setSelectedSummary","updatedDate","setUpdatedDate","compare","a","b","ac","TotalConfirmed","bc","useEffect","Countries","filter","d","sort","openSummaryModal","val","className","moment","utc","local","format","Row","Col","md","xs","Input","placeholder","onChange","e","value","target","results","c","Country","toLocaleLowerCase","includes","paginator","paginatorTemplate","currentPageReportTemplate","rows","responsive","emptyMessage","rowsPerPageOptions","onRowClick","field","header","sortable","body","toLocaleString","TotalRecovered","TotalDeaths","Button","type","onClick","title","Modal","isOpen","undefined","toggle","ModalHeader","ModalBody","summary","datasets","label","backgroundColor","borderWidth","width","generateChartModal","ModalFooter","CaseSummaryChart","GlobalSummaryChart","summaries","map","country","length","replace","active","DevDetail","href","rel","Content","setData","setDate","getTime","time","setTime","globalData","setGlobalData","getData","timer","setTimeout","clearTimeout","useLayoutEffect","handleResize","window","location","reload","addEventListener","removeEventListener","handleScroll","goToTop","document","getElementById","goToGlobal","globalPanel","scrollY","offsetTop","style","display","update_date_time","local_new_cases","local_total_cases","local_total_number_of_individuals_in_hospitals","local_deaths","local_new_deaths","local_recovered","global_new_cases","global_total_cases","global_deaths","global_new_deaths","global_recovered","countries","item","index","Slug","indexOf","id","timelineData","caseGrowth","borderColor","fill","innerWidth","push","timelineChartOptions","elements","point","radius","hoverRadius","hitRadius","fontSize","scales","yAxes","gridLines","color","borderDash","ticks","xAxes","autoSkip","maxRotation","minRotation","callback","toDate","getDay","split","labelArray","generateTimeLineChartModal","filteredData","slice","getGlobalSummariesChartData","scrollTop","documentElement","App","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bc271cbd.chunk.js","sourcesContent":["import * as queryString from 'query-string';\r\n\r\nimport axios, { AxiosRequestConfig, Method, AxiosInstance } from 'axios';\r\nimport { Full_response_data, Full_response_data_global } from '../types';\r\n\r\nvar instanceSl = axios.create({\r\n  baseURL: 'https://hpb.health.gov.lk/api/',\r\n});\r\n\r\nvar instanceGlobal = axios.create({\r\n  baseURL: 'https://api.covid19api.com/'\r\n})\r\n\r\naxios.defaults.headers.common['Content-Type'] = 'application/json';\r\naxios.defaults.headers.common['Accept'] = 'application/json';\r\n\r\nexport const apiService = {\r\n  get,\r\n  getStatistics_HPB,\r\n  getStatistics_Global\r\n}\r\n\r\nfunction getStatistics_HPB() {\r\n  return get<Full_response_data>(instanceSl, '', 'get-current-statistical', [])\r\n    .then((res: any) => res.data);\r\n}\r\n\r\nfunction getStatistics_Global() {\r\n  return get<Full_response_data_global>(instanceGlobal, '', 'summary', [])\r\n    .then((res: any) => res);\r\n}\r\n\r\nfunction get<T>(instance: AxiosInstance, controller: string, action: string = '', urlParams: string[] = [], queryParams: any = null) {\r\n  return apiRequest<T>(instance, 'get', controller, action, null, urlParams, queryParams);\r\n}\r\n\r\nfunction apiRequest<T>(instance: AxiosInstance, method: Method, controller: string, action: string = '', data: any, urlParams: string[] = [],\r\n  queryParams: any = null) {\r\n  let url = createUrl(controller, action, urlParams, queryParams);\r\n  let options = createRequestOptions(url, method, data);\r\n\r\n  return instance.request<T>(options)\r\n    .then(res => res && res.data)\r\n    .catch(error => {\r\n      console.log(error);\r\n      throw error;\r\n    });\r\n}\r\n\r\nfunction createUrl(controller: string, action: string = '', urlParams: string[] = [], queryParams: any = null) {\r\n  let url = controller + (action ? '/' + action : '');\r\n\r\n  urlParams.forEach(param => {\r\n    url += '/' + param;\r\n  });\r\n\r\n  let params = '';\r\n  if (queryParams) {\r\n    params += '?' + queryString.stringify(queryParams);\r\n  }\r\n\r\n  return url += params;\r\n}\r\n\r\nfunction createRequestOptions(url: string, method: Method, data: any, responseType?: any) {\r\n  var options: AxiosRequestConfig = {\r\n    url,\r\n    method,\r\n    data\r\n  }\r\n\r\n  if (responseType) {\r\n    options.responseType = responseType;\r\n  }\r\n\r\n  return options;\r\n}\r\n","export interface Response_data {\r\n  local_new_cases: number;\r\n  local_total_cases: number;\r\n  local_total_number_of_individuals_in_hospitals: number;\r\n  local_deaths: number;\r\n  local_new_deaths: number;\r\n  local_recovered: number;\r\n\r\n  global_new_cases: number;\r\n  global_total_cases: number;\r\n  global_deaths: number;\r\n  global_new_deaths: number;\r\n  global_recovered: number;\r\n}\r\n\r\nexport interface Full_response_data extends Response_data {\r\n  update_date_time: string;\r\n}\r\n\r\nexport interface Full_response_data_global {\r\n  Countries: CountrySummaryDto[];\r\n  Date: Date;\r\n}\r\n\r\nexport interface CountrySummaryDto {\r\n  Country: string,\r\n  NewConfirmed: number,\r\n  NewDeaths: number,\r\n  NewRecovered: number,\r\n  Slug: string,\r\n  TotalConfirmed: number,\r\n  TotalDeaths: number,\r\n  TotalRecovered: number\r\n}\r\n\r\nexport interface CaseSummary {\r\n  date?: Date,\r\n  confirmed: number,\r\n  deaths: number,\r\n  recovered: number\r\n}\r\n\r\n\r\nexport interface GlobalSummary extends CaseSummary {\r\n  active: number,\r\n  country: string;\r\n}\r\n\r\nexport enum FilterType {\r\n  Confirmed = 0,\r\n  Deaths = 1,\r\n  Recovered = 2,\r\n  NewConfirmed = 3,\r\n  NewDeaths = 4,\r\n  NewRecovered = 5\r\n}\r\n\r\nexport const FilterSelectOptions: any = [\r\n  { label: 'Total Confirmed', value: FilterType.Confirmed },\r\n  { label: 'Total Deaths', value: FilterType.Deaths },\r\n  { label: 'Total Recovered', value: FilterType.Recovered },\r\n  { label: 'New Confirmed', value: FilterType.NewConfirmed },\r\n  { label: 'New Deaths', value: FilterType.NewDeaths },\r\n  { label: 'New Recovered', value: FilterType.NewRecovered }\r\n];\r\n\r\nexport const FilterDirectionOptions: any = [\r\n  { label: 'Desc', value: 0 },\r\n  { label: 'Asc', value: 1 }\r\n];\r\n\r\n\r\nexport const LOCAL_TIMELINE: CaseSummary[] = [\r\n  { date: new Date(2020, 2, 10), recovered: 0, deaths: 0, confirmed: 1 },\r\n  { date: new Date(2020, 2, 11), recovered: 0, deaths: 0, confirmed: 1 },\r\n  { date: new Date(2020, 2, 12), recovered: 0, deaths: 0, confirmed: 2 },\r\n  { date: new Date(2020, 2, 13), recovered: 0, deaths: 0, confirmed: 4 },\r\n  { date: new Date(2020, 2, 14), recovered: 0, deaths: 0, confirmed: 6 },\r\n  { date: new Date(2020, 2, 15), recovered: 0, deaths: 0, confirmed: 11 },\r\n  { date: new Date(2020, 2, 16), recovered: 0, deaths: 0, confirmed: 19 },\r\n  { date: new Date(2020, 2, 17), recovered: 0, deaths: 0, confirmed: 29 },\r\n  { date: new Date(2020, 2, 18), recovered: 0, deaths: 0, confirmed: 42 },\r\n  { date: new Date(2020, 2, 19), recovered: 0, deaths: 0, confirmed: 53 },\r\n  { date: new Date(2020, 2, 20), recovered: 0, deaths: 0, confirmed: 66 },\r\n  { date: new Date(2020, 2, 21), recovered: 0, deaths: 0, confirmed: 72 },\r\n  { date: new Date(2020, 2, 22), recovered: 0, deaths: 0, confirmed: 78 },\r\n  { date: new Date(2020, 2, 23), recovered: 0, deaths: 0, confirmed: 87 },\r\n  { date: new Date(2020, 2, 24), recovered: 2, deaths: 0, confirmed: 97 },\r\n  { date: new Date(2020, 2, 25), recovered: 3, deaths: 0, confirmed: 102 },\r\n  { date: new Date(2020, 2, 26), recovered: 3, deaths: 0, confirmed: 102 },\r\n  { date: new Date(2020, 2, 27), recovered: 7, deaths: 0, confirmed: 106 },\r\n  { date: new Date(2020, 2, 28), recovered: 9, deaths: 1, confirmed: 113 },\r\n  { date: new Date(2020, 2, 29), recovered: 11, deaths: 1, confirmed: 117 },\r\n  { date: new Date(2020, 2, 30), recovered: 14, deaths: 2, confirmed: 122 },\r\n  { date: new Date(2020, 2, 31), recovered: 17, deaths: 2, confirmed: 143 },\r\n  { date: new Date(2020, 3, 1), recovered: 21, deaths: 2, confirmed: 146 },\r\n  { date: new Date(2020, 3, 2), recovered: 21, deaths: 3, confirmed: 151 },\r\n  { date: new Date(2020, 3, 3), recovered: 22, deaths: 4, confirmed: 151 },\r\n  { date: new Date(2020, 3, 4), recovered: 27, deaths: 5, confirmed: 162 },\r\n  { date: new Date(2020, 3, 5), recovered: 33, deaths: 5, confirmed: 176 },\r\n  { date: new Date(2020, 3, 6), recovered: 38, deaths: 5, confirmed: 178 },\r\n  { date: new Date(2020, 3, 7), recovered: 42, deaths: 6, confirmed: 185 },\r\n  { date: new Date(2020, 3, 8), recovered: 44, deaths: 7, confirmed: 189 },\r\n  { date: new Date(2020, 3, 9), recovered: 49, deaths: 7, confirmed: 190 },\r\n  { date: new Date(2020, 3, 10), recovered: 54, deaths: 7, confirmed: 197 },\r\n  { date: new Date(2020, 3, 11), recovered: 54, deaths: 7, confirmed: 199 },\r\n  { date: new Date(2020, 3, 12), recovered: 56, deaths: 7, confirmed: 210 },\r\n  { date: new Date(2020, 3, 13), recovered: 56, deaths: 7, confirmed: 217 },\r\n  { date: new Date(2020, 3, 14), recovered: 61, deaths: 7, confirmed: 233 },\r\n  { date: new Date(2020, 3, 15), recovered: 63, deaths: 7, confirmed: 238 },\r\n  { date: new Date(2020, 3, 16), recovered: 68, deaths: 7, confirmed: 238 },\r\n  { date: new Date(2020, 3, 17), recovered: 77, deaths: 7, confirmed: 244 },\r\n  { date: new Date(2020, 3, 18), recovered: 91, deaths: 7, confirmed: 254 },\r\n  { date: new Date(2020, 3, 19), recovered: 96, deaths: 7, confirmed: 271 },\r\n  { date: new Date(2020, 3, 20), recovered: 98, deaths: 7, confirmed: 304 },\r\n  { date: new Date(2020, 3, 21), recovered: 102, deaths: 7, confirmed: 310 },\r\n  { date: new Date(2020, 3, 22), recovered: 105, deaths: 7, confirmed: 330 },\r\n  { date: new Date(2020, 3, 23), recovered: 107, deaths: 7, confirmed: 368 },\r\n  { date: new Date(2020, 3, 24), recovered: 109, deaths: 7, confirmed: 416 },\r\n];\r\n","import React, { useState, useEffect } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Full_response_data_global, CountrySummaryDto } from '../../types';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport { Chart } from 'primereact/chart';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col, Input } from 'reactstrap';\r\nimport moment from 'moment';\r\n\r\nconst chartOptions = {\r\n  maintainAspectRatio: true,\r\n  aspectRatio: 1,\r\n  rotation: 0.5 * Math.PI,\r\n  legend: {\r\n    labels: {\r\n      fontColor: '#fff'\r\n    },\r\n    position: 'bottom'\r\n  },\r\n  layout: {\r\n    padding: {\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    }\r\n  }\r\n};\r\n\r\ninterface Props {\r\n  data: Full_response_data_global;\r\n}\r\n\r\nconst Global = (props: Props) => {\r\n\r\n  const [filteredContents, setContents] = useState<CountrySummaryDto[]>();\r\n  const [selectedSummary, setSelectedSummary] = useState<CountrySummaryDto>();\r\n  const [updatedDate, setUpdatedDate] = useState(new Date());\r\n\r\n\r\n  const compare = (a: CountrySummaryDto, b: CountrySummaryDto) => {\r\n    let ac = a.TotalConfirmed;\r\n    let bc = b.TotalConfirmed;\r\n\r\n    if (ac < bc)\r\n      return 1;\r\n    if (ac > bc)\r\n      return -1;\r\n\r\n    return 0\r\n  }\r\n\r\n  const generateChartModal = (summary: CountrySummaryDto) => {\r\n\r\n    let data = {\r\n      labels: [\r\n        'Active',\r\n        'Recovered',\r\n        'Deaths'\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: 'Local Cases',\r\n          data: [\r\n            summary.TotalConfirmed - summary.TotalRecovered - summary.TotalDeaths,\r\n            summary.TotalRecovered,\r\n            summary.TotalDeaths,\r\n          ],\r\n          backgroundColor: [\r\n            'rgb(0, 119, 255)',\r\n            'rgb(39, 233, 0)',\r\n            'rgb(255, 38, 0)'\r\n          ],\r\n          borderWidth: 0\r\n        }\r\n      ]\r\n    };\r\n\r\n    return <>\r\n      <Chart width=\"\" type=\"pie\" data={data} options={chartOptions} />\r\n      <div className=\"modalRow\">\r\n        <Row>\r\n          <Col md={6} xs={6}>Total: </Col>\r\n          <Col>{summary.TotalConfirmed.toLocaleString()}</Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6} xs={6}>Total Active: </Col>\r\n          <Col>{(summary.TotalConfirmed - summary.TotalRecovered - summary.TotalDeaths).toLocaleString()} ( New: {summary.NewConfirmed.toLocaleString()} )</Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6} xs={6}>Total Recovered: </Col>\r\n          <Col>{summary.TotalRecovered.toLocaleString()} ( New: {summary.NewRecovered.toLocaleString()} )</Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6} xs={6}>Total Deaths: </Col>\r\n          <Col>{summary.TotalDeaths.toLocaleString()} ( New: {summary.NewDeaths.toLocaleString()} )</Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  }\r\n\r\n  useEffect(() => {\r\n    let data = props.data.Countries.filter((d: CountrySummaryDto) => d.TotalConfirmed > 0)\r\n    setContents(data.sort(compare));\r\n    setUpdatedDate(props.data.Date);\r\n  }, [props.data])\r\n\r\n  const openSummaryModal = (val: CountrySummaryDto) => setSelectedSummary(val);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header-row header\">\r\n        <h3>Outbreak summaries across the world</h3>\r\n        <p>\r\n          Updated at {moment.utc(new Date(updatedDate)).local().format('ddd, MMM D hh:mm:ss a')}\r\n        </p>\r\n      </div>\r\n      <Row>\r\n        <Col md={3} xs={0}></Col>\r\n        <Col className=\"data-panel\">\r\n          <Input\r\n            placeholder=\"Enter search term here...\"\r\n            onChange={(e: any) => {\r\n              let value = e.target ? e.target.value : '';\r\n              let results = props.data.Countries;\r\n              setContents(results.filter((c: CountrySummaryDto) => c.TotalConfirmed && (!value || c.Country.toLocaleLowerCase().includes((value || '').toLocaleLowerCase()))));\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col md={3} xs={0}></Col>\r\n      </Row>\r\n      <div className=\"table-wrapper\">\r\n        <DataTable\r\n          value={filteredContents}\r\n          paginator={true}\r\n          paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n          currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n          rows={5}\r\n          responsive\r\n          emptyMessage=\"No Records Found\"\r\n          rowsPerPageOptions={[5, 10, 20]}\r\n          onRowClick={(e: any) => { openSummaryModal(e.data) }}>\r\n          <Column className=\"country\" field=\"Country\" header=\"Country\" sortable />\r\n          <Column className=\"confirmed\" field=\"TotalConfirmed\" header=\"Total Confirmed\" sortable body={(val: CountrySummaryDto) => val.TotalConfirmed.toLocaleString()} />\r\n          <Column className=\"active\" field=\"TotalActive\" header=\"Total Active\" sortable body={(val: CountrySummaryDto) => (val.TotalConfirmed - val.TotalRecovered - val.TotalDeaths).toLocaleString()} />\r\n          <Column className=\"recovered\" field=\"TotalRecovered\" header=\"Total Recovered\" sortable body={(val: CountrySummaryDto) => val.TotalRecovered.toLocaleString()} />\r\n          <Column className=\"deaths\" field=\"TotalDeaths\" header=\"Total Deaths\" sortable body={(val: CountrySummaryDto) => val.TotalDeaths.toLocaleString()} />\r\n          <Column\r\n            body={\r\n              (val: CountrySummaryDto) =>\r\n                <Button\r\n                  type=\"button\"\r\n                  onClick={() => openSummaryModal(val)}\r\n                  title=\"View Summary\"\r\n                >\r\n                  <i className=\"material-icons\">remove_red_eye</i>\r\n                  <span>View Summary</span>\r\n                </Button>\r\n            }\r\n          />\r\n        </DataTable>\r\n      </div>\r\n      {selectedSummary &&\r\n        <Modal\r\n          isOpen={selectedSummary !== undefined}\r\n          toggle={() => setSelectedSummary(undefined)}\r\n        >\r\n          <ModalHeader className=\"chart-modal\" toggle={() => setSelectedSummary(undefined)}>\r\n            <h2>{selectedSummary.Country}</h2>\r\n          </ModalHeader>\r\n          <ModalBody className=\"chart-modal\">\r\n            {generateChartModal(selectedSummary)}\r\n          </ModalBody>\r\n          <ModalFooter className=\"chart-modal footer\">\r\n            <Button className=\"btn\" type=\"button\" onClick={() => setSelectedSummary(undefined)}>Close Chart</Button>\r\n          </ModalFooter >\r\n        </Modal >\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Global;","import React from 'react';\r\nimport { CaseSummary } from '../../types';\r\nimport { Chart } from 'primereact/chart';\r\n\r\ninterface Props {\r\n  summary: CaseSummary;\r\n  type: string\r\n  width?: string\r\n}\r\n\r\nconst CaseSummaryChart = ({ summary, type, width }: Props) => {\r\n  const { confirmed, deaths, recovered } = summary;\r\n\r\n  const data = {\r\n    labels: [\r\n      'Active',\r\n      'Recovered',\r\n      'Deaths'\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: 'Local Cases',\r\n        data: [\r\n          confirmed - recovered - deaths,\r\n          recovered,\r\n          deaths\r\n        ],\r\n        backgroundColor: [\r\n          'rgb(0, 119, 255)',\r\n          'rgb(39, 233, 0)',\r\n          'rgb(255, 38, 0)',\r\n        ],\r\n        borderWidth: 0\r\n      }\r\n    ]\r\n  };\r\n\r\n  let options = {\r\n    maintainAspectRatio: true,\r\n    aspectRatio: 1,\r\n    rotation: 0.5 * Math.PI,\r\n    legend: {\r\n      labels: {\r\n        fontColor: '#fff'\r\n      },\r\n      position: 'bottom'\r\n    },\r\n    layout: {\r\n      padding: {\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0\r\n      }\r\n    }\r\n  };\r\n\r\n  return <>\r\n    <Chart width={width || ''} type={type} data={data} options={options} />\r\n  </>;\r\n}\r\n\r\nexport default CaseSummaryChart;","import React from 'react';\r\nimport { GlobalSummary } from '../../types';\r\nimport { Chart } from 'primereact/chart';\r\n\r\ninterface Props {\r\n  summaries?: GlobalSummary[];\r\n}\r\n\r\nconst GlobalSummaryChart = ({ summaries }: Props) => {\r\n\r\n  let data = summaries ? {\r\n    labels: summaries.map((d: GlobalSummary) => d.country.length > 10 ? d.country.replace(/[a-z ]/g, '') : d.country),\r\n    datasets: [\r\n      {\r\n        label: 'Active',\r\n        data: summaries.map((d: GlobalSummary) => d.active),\r\n        backgroundColor: 'rgb(0, 119, 255)',\r\n        borderWidth: 0\r\n      },\r\n      {\r\n        label: 'Recovered',\r\n        data: summaries.map((d: GlobalSummary) => d.recovered),\r\n        backgroundColor: 'rgb(39, 233, 0)',\r\n        borderWidth: 0\r\n      },\r\n      {\r\n        label: 'Deaths',\r\n        data: summaries.map((d: GlobalSummary) => d.deaths),\r\n        backgroundColor: 'rgb(255, 38, 0)',\r\n        borderWidth: 0\r\n      }\r\n    ]\r\n  } : null;\r\n\r\n  let options = {\r\n    maintainAspectRatio: true,\r\n    aspectRatio: 1,\r\n    rotation: 1,\r\n    legend: {\r\n      labels: {\r\n        fontColor: '#fff'\r\n      },\r\n      position: 'bottom'\r\n    },\r\n    layout: {\r\n      padding: {\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0\r\n      }\r\n    }\r\n  };\r\n\r\n  return data && <>\r\n    <Chart width={''} type={'horizontalBar'} data={data} options={options} />\r\n  </>;\r\n}\r\n\r\nexport default GlobalSummaryChart;","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst DevDetail = () => {\r\n  return (\r\n    <div className=\"dev-detail\">\r\n      Sobedan Sridaran&nbsp;\r\n      |\r\n      <Button type=\"button\" title=\"LinkedIn\">\r\n        <a\r\n          href=\"https://www.linkedin.com/in/sobedan-sridaran/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <i className=\"fa fa-linkedin\"></i>\r\n        </a>\r\n      </Button>\r\n      |\r\n      <Button type=\"button\" title=\"Github\">\r\n        <a\r\n          href=\"https://github.com/sobesri/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <i className=\"fa fa-github\"></i>\r\n        </a>\r\n      </Button>\r\n      |&nbsp;&nbsp;Provide Feedback :\r\n      <Button className=\"comment\" type=\"button\" title=\"Feedback\">\r\n        <a\r\n          href=\"https://forms.gle/PsMxEjBuXfGdaB5B6\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <i className=\"fa fa-file-text-o\"></i>\r\n        </a>\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DevDetail;","import React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport { apiService } from '../services/api.service';\r\nimport { Response_data, Full_response_data, LOCAL_TIMELINE, CaseSummary, Full_response_data_global, CountrySummaryDto, GlobalSummary } from '../types';\r\nimport { Button } from 'reactstrap';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nimport moment from 'moment';\r\nimport Global from '../Components/Global';\r\nimport CaseSummaryChart from '../Components/SummaryChart/caseSummaryChart';\r\nimport GlobalSummaryChart from '../Components/SummaryChart/globalSummaryChart';\r\nimport DevDetail from '../Components/DevDetail';\r\n\r\nconst Content = () => {\r\n  const [data, setData] = useState<Response_data>();\r\n  const [updatedDate, setDate] = useState<Date>(new Date());\r\n  const [time, setTime] = useState(new Date().getTime());\r\n  const [globalData, setGlobalData] = useState<Full_response_data_global>();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setTime(new Date().getTime());\r\n      getData();\r\n    }, 300000);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [time]);\r\n\r\n  useLayoutEffect(() => {\r\n\r\n    const handleResize = () => {\r\n      window.location.reload(false);\r\n    }\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    const handleScroll = () => {\r\n      var goToTop = document.getElementById(\"goToTopButton\");\r\n      var goToGlobal = document.getElementById(\"goToGlobalButton\");\r\n\r\n      var globalPanel = document.getElementById(\"global\");\r\n\r\n      if (goToTop && goToGlobal) {\r\n        if (window.scrollY > (globalPanel ? globalPanel.offsetTop : 500) / 2)\r\n          goToGlobal.style.display = \"none\";\r\n        else\r\n          goToGlobal.style.display = \"block\";\r\n        if (window.scrollY > 900)\r\n          goToTop.style.display = \"block\";\r\n\r\n        else\r\n          goToTop.style.display = \"none\";\r\n\r\n      }\r\n    }\r\n\r\n    window.addEventListener('scroll', handleScroll)\r\n\r\n    return () => window.removeEventListener('scroll', handleScroll)\r\n  }, [])\r\n\r\n  const onGoToGlobalClicked = () => {\r\n    var globalPanel = document.getElementById(\"global\");\r\n    document.body.scrollTop = globalPanel ? globalPanel.offsetTop : 0;\r\n    document.documentElement.scrollTop = globalPanel ? globalPanel.offsetTop : 0;\r\n  }\r\n\r\n  const getData = () => {\r\n    apiService.getStatistics_HPB()\r\n      .then((res: Full_response_data) => {\r\n        setDate(new Date(res.update_date_time));\r\n\r\n        let d: Response_data = {\r\n          local_new_cases: res.local_new_cases,\r\n          local_total_cases: res.local_total_cases,\r\n          local_total_number_of_individuals_in_hospitals: res.local_total_number_of_individuals_in_hospitals,\r\n          local_deaths: res.local_deaths,\r\n          local_new_deaths: res.local_new_deaths,\r\n          local_recovered: res.local_recovered,\r\n\r\n          global_new_cases: res.global_new_cases,\r\n          global_total_cases: res.global_total_cases,\r\n          global_deaths: res.global_deaths,\r\n          global_new_deaths: res.global_new_deaths,\r\n          global_recovered: res.global_recovered,\r\n        };\r\n\r\n        setData(d);\r\n      });\r\n\r\n    apiService.getStatistics_Global()\r\n      .then((res: Full_response_data_global) => {\r\n\r\n\r\n        let countries = res.Countries;\r\n\r\n        countries = countries.filter((item: CountrySummaryDto, index: number) => {\r\n          return (countries.map(c => c.Slug).indexOf(item.Slug) === index)\r\n        });\r\n\r\n        setGlobalData({ ...res, Countries: countries });\r\n\r\n      })\r\n  }\r\n\r\n  const generateTimeLineChartModal = () => {\r\n\r\n    let timelineData = LOCAL_TIMELINE;\r\n\r\n    let caseGrowth = LOCAL_TIMELINE.map((d: CaseSummary, index: number) => {\r\n      if (index === 0) return d.confirmed;\r\n      else return LOCAL_TIMELINE[index].confirmed - LOCAL_TIMELINE[index - 1].confirmed\r\n    })\r\n\r\n    let data = {\r\n      labels: timelineData.map((d: CaseSummary) => moment.utc(d.date ? new Date(d.date) : new Date()).local().format('MMM D Y')),\r\n      datasets: [\r\n        {\r\n          type: \"line\",\r\n          label: 'Confirmed',\r\n          data: timelineData.map((d: CaseSummary) => d.confirmed),\r\n          backgroundColor: 'rgb(255, 255, 255)',\r\n          borderColor: 'rgb(255, 255, 255)',\r\n          fill: false,\r\n        },\r\n        {\r\n          type: \"line\",\r\n          label: 'Active',\r\n          data: timelineData.map((d: CaseSummary) => (d.confirmed - d.deaths - d.recovered)),\r\n          backgroundColor: 'rgb(0, 119, 255)',\r\n          borderColor: 'rgb(0, 119, 255)',\r\n          fill: false,\r\n        },\r\n        {\r\n          type: \"line\",\r\n          label: 'Recovered',\r\n          data: timelineData.map((d: CaseSummary) => d.recovered),\r\n          backgroundColor: 'rgb(39, 233, 0)',\r\n          borderColor: 'rgb(39, 233, 0)',\r\n          fill: false,\r\n        },\r\n        {\r\n          type: \"line\",\r\n          label: 'Deaths',\r\n          data: timelineData.map((d: CaseSummary) => d.deaths),\r\n          backgroundColor: 'rgb(255, 38, 0)',\r\n          borderColor: 'rgb(255, 38, 0)',\r\n          fill: false,\r\n        }\r\n      ]\r\n    };\r\n\r\n    if (window.innerWidth > 600) {\r\n      data.labels.push(\"Daily Cases\");\r\n      data.datasets.push(\r\n        {\r\n          type: \"bar\",\r\n          label: 'Daily Cases',\r\n          data: caseGrowth,\r\n          backgroundColor: 'rgba(255, 255, 255, 0.4)',\r\n          borderColor: 'rgba(255, 255, 255, 0.4',\r\n          fill: false,\r\n        }\r\n      );\r\n    }\r\n\r\n    const timelineChartOptions =\r\n    {\r\n      aspectRatio: window.innerWidth > 600 ? 1.2 : 0.7,\r\n      elements: {\r\n        point: {\r\n          radius: 0,\r\n          hoverRadius: 4,\r\n          hitRadius: 6,\r\n        }\r\n      },\r\n      legend: {\r\n        labels: {\r\n          fontSize: 12,\r\n          fontColor: '#fff'\r\n        },\r\n        position: 'bottom'\r\n      },\r\n      layout: {\r\n        padding: {\r\n          left: 0,\r\n          right: 0,\r\n          top: 20,\r\n          bottom: 10\r\n        }\r\n      },\r\n      scales: {\r\n        yAxes: [{\r\n          position: 'right',\r\n          gridLines: {\r\n            color: \"rgba(255, 255, 255, 0.06)\",\r\n            borderDash: [3]\r\n          },\r\n          ticks: {\r\n            fontSize: 10,\r\n          }\r\n        }],\r\n        xAxes: [{\r\n          id: 'date',\r\n          type: 'category',\r\n          gridLines: {\r\n            color: \"rgba(255, 255, 255, 0.04)\",\r\n            borderDash: [6]\r\n          },\r\n          ticks: {\r\n            autoSkip: false,\r\n            maxRotation: 0,\r\n            minRotation: 0,\r\n            callback: function (label: any) {\r\n              let labelDate = moment.utc(label).toDate();\r\n              if (labelDate.getDay() === 1) {\r\n                var labelArray = label.split(\" \");\r\n                return labelArray[1];\r\n              }\r\n            }\r\n          }\r\n        },\r\n        {\r\n          id: 'month',\r\n          type: 'category',\r\n          ticks: {\r\n            autoSkip: false,\r\n            maxRotation: 0,\r\n            minRotation: 0,\r\n            color: \"rgba(255, 255, 255, 1)\",\r\n            callback: function (label: any) {\r\n              let labelDate = moment.utc(label).toDate();\r\n              if (labelDate.getDay() === 1) {\r\n                var labelArray = label.split(\" \");\r\n                return `${labelArray[0]}`;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        ]\r\n      }\r\n    };\r\n\r\n    return <>\r\n      <div className='title'>\r\n        <strong>Progression of the outbreak</strong><br />\r\n        <small>Data updated manually, last updated at <strong>{moment.utc(new Date(2020, 3, 24, 21, 54, 12)).local().format('ddd, MMM D hh:mm:ss a')}</strong></small><br />\r\n          Source:&nbsp;\r\n        <a\r\n          href=\"http://www.epid.gov.lk/web/index.php?option=com_content&view=article&id=225&Itemid=518&lang=en\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          epid.gov.lk/\r\n          </a>\r\n      </div>\r\n      <Chart width=\"\" data={data} options={timelineChartOptions} />\r\n    </>\r\n  }\r\n\r\n  const getGlobalSummariesChartData = () => {\r\n\r\n    let filteredData = globalData && globalData.Countries.sort(compare);\r\n\r\n    if (!filteredData) return undefined;\r\n\r\n    let firstFew = filteredData.slice(0, 4);\r\n\r\n    let data: GlobalSummary[] = firstFew.map((c: CountrySummaryDto) => {\r\n      return ({\r\n        confirmed: c.TotalConfirmed,\r\n        active: c.TotalConfirmed - c.TotalRecovered - c.TotalDeaths,\r\n        deaths: c.TotalDeaths,\r\n        recovered: c.TotalRecovered,\r\n        country: c.Country\r\n      });\r\n    });\r\n\r\n    return data;\r\n\r\n  }\r\n\r\n  const compare = (a: CountrySummaryDto, b: CountrySummaryDto) => {\r\n    let ac = a.TotalConfirmed;\r\n    let bc = b.TotalConfirmed;\r\n\r\n    if (ac < bc)\r\n      return 1;\r\n    if (ac > bc)\r\n      return -1;\r\n\r\n    return 0;\r\n  }\r\n\r\n  return !data ? <></> :\r\n    <>\r\n      <div id=\"local\">\r\n        <div className=\"header-row\">\r\n          <h1>Sri Lankan Covid-19 Outbreak Status</h1>\r\n          <p>\r\n            Updated at {moment.utc(new Date(updatedDate)).local().format('ddd, MMM D hh:mm:ss a')}<br />\r\n            <span className=\"source\">\r\n              <span className=\"mobile\">\r\n                Source:&nbsp;\r\n                <a href=\"https://hpb.health.gov.lk/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  HPB\r\n                </a>\r\n              </span>\r\n              <span className=\"full\">\r\n                Source:&nbsp;\r\n                <a href=\"https://hpb.health.gov.lk/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  HPB | Live updates on New Coronavirus (COVID-19) outbreak\r\n                </a>\r\n              </span>\r\n            </span>\r\n          </p>\r\n          <small>\r\n            <DevDetail />\r\n          </small>\r\n          {/* <div className=\"data-panel row special-box\">\r\n            <div className=\"column-4\">සුභ අලුත් අවුරුද්දක් වේවා!</div>\r\n            <div className=\"column-4\">இனிய புத்தாண்டு நாள் வாழ்த்துக்கள்!</div>\r\n            <div className=\"column-4\">Happy Sinhala and Tamil New Year!</div>\r\n            <div className=\"column-wide\"><strong>Gone, but not forgotten. 21-04-2019 </strong><i className=\"fa fa-fire\"></i></div>\r\n          </div> */}\r\n        </div>\r\n        <div className=\"data-panel\">\r\n          <div className=\"row border-box-sm\">\r\n            <div className=\"column\">\r\n              <div className='chart padding-top-lg'>\r\n                <CaseSummaryChart type=\"doughnut\" summary={{ confirmed: data.local_total_cases, deaths: data.local_deaths, recovered: data.local_recovered }} />\r\n              </div>\r\n              <div className=\"row-panel padding-top-lg\">\r\n                <h2>Total Cases: {data && data.local_total_cases.toLocaleString()}</h2>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"column-4 data-border active\">Active: {(data.local_total_cases - data.local_recovered - data.local_deaths).toLocaleString()}</div>\r\n                <div className=\"column-4 data-border recovered\">Recovered: {data.local_recovered.toLocaleString()}</div>\r\n                <div className=\"column-4 data-border deaths\">Deaths: {data.local_deaths.toLocaleString()}</div>\r\n              </div>\r\n              <div className=\"row-panel\">\r\n                <div className=\"updates data-border\">\r\n                  Updates <span>: </span>\r\n                  New cases : <strong>{data.local_new_cases.toLocaleString()}</strong> <span>- </span>\r\n                  New deaths : <strong>{data.local_new_deaths.toLocaleString()}</strong> <span>- </span>\r\n                  In Hospital : <strong>{data.local_total_number_of_individuals_in_hospitals.toLocaleString()}</strong>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"column padding-top-lg\">\r\n              <div className='chart line'>\r\n                {generateTimeLineChartModal()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"padding-top-xlg\">\r\n        </div>\r\n      </div>\r\n      <div id=\"global\">\r\n        <div className=\"padding-top-lg\">\r\n        </div>\r\n        <div>\r\n          <div className=\"header-row\">\r\n            <h1>Global Covid-19 Outbreak Status</h1>\r\n            <p>\r\n\r\n              <span className=\"source\">\r\n                <span className=\"mobile\">\r\n                  Sources:&nbsp;\r\n                  <a href=\"https://hpb.health.gov.lk/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    HPB\r\n                </a>, <br />\r\n                  <a href=\"https://documenter.getpostman.com/view/10808728/SzS8rjbc?version=latest\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    postman - Covid19 API\r\n                </a>\r\n                </span>\r\n                <span className=\"full\">\r\n                  Sources:&nbsp;\r\n                  <a href=\"https://hpb.health.gov.lk/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    HPB | Live updates on New Coronavirus (COVID-19) outbreak</a> , <br />\r\n                  <a href=\"https://documenter.getpostman.com/view/10808728/SzS8rjbc?version=latest\" target=\"_blank\" rel=\"noopener noreferrer\">Coronavirus COVID19 API</a>\r\n                </span>\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div className=\"data-panel\">\r\n            <div className=\"row border-box-sm\">\r\n              <div className=\"column\">\r\n                <div className='row-panel chart'>\r\n                  <CaseSummaryChart type=\"doughnut\" summary={{ confirmed: data.global_total_cases, deaths: data.global_deaths, recovered: data.global_recovered }} />\r\n                </div>\r\n                <div className=\"row-panel padding-top-lg\">\r\n                  <h2>Global Cases: {data.global_total_cases.toLocaleString()}</h2>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"column-4 data-border active\">Active: {(data.global_total_cases - data.global_recovered - data.global_deaths).toLocaleString()}</div>\r\n                  <div className=\"column-4 data-border recovered\">Recovered: {data.global_recovered.toLocaleString()}</div>\r\n                  <div className=\"column-4 data-border deaths\">Deaths: {data.global_deaths.toLocaleString()}</div>\r\n                </div>\r\n                <div className=\"row-panel\">\r\n                  <div className=\"updates data-border\">\r\n                    Updates <span>: </span>\r\n                    New cases : <strong>{data.global_new_cases.toLocaleString()}</strong> <span>- </span>\r\n                    New deaths : <strong>{data.global_new_deaths.toLocaleString()}</strong>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"column chart-bar\">\r\n                <GlobalSummaryChart summaries={getGlobalSummariesChartData()} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"data-panel\">\r\n            <div className=\"padding-top-md\">\r\n            </div>\r\n            <div className=\"row-panel border-box-sm\">\r\n              {globalData && <Global data={globalData} />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div >\r\n      <Button\r\n        className=\"floating-btn\"\r\n        type=\"button\"\r\n        id=\"goToTopButton\"\r\n        onClick={() => {\r\n          document.body.scrollTop = 0;\r\n          document.documentElement.scrollTop = 0;\r\n        }}\r\n        title=\"Go to top\"\r\n      >\r\n        Top\r\n    </Button>\r\n      <Button\r\n        className=\"floating-btn\"\r\n        type=\"button\"\r\n        id=\"goToGlobalButton\"\r\n        onClick={onGoToGlobalClicked}\r\n        title=\"Go to Global\"\r\n      >\r\n        Global\r\n    </Button>\r\n      <Button\r\n        className=\"floating-btn\"\r\n        type=\"button\"\r\n        id=\"reloadButton\"\r\n        title=\"Reload data\"\r\n        onClick={() => getData()}>\r\n        <span>\r\n          Reload\r\n          </span>\r\n        <i className=\"material-icons\">\r\n          refresh\r\n          </i>\r\n      </Button>\r\n    </>\r\n}\r\n\r\nexport default Content;","import React from 'react';\n\nimport './App.css';\nimport Content from './content';\n\nfunction App() {\n  return (\n    <>\n      <div className=\"wrapper\">\n        <Content />\n      </div>\n    </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './util/styles/styles.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}